{"version":3,"sources":["SearchBar.js","ListPhotos.js","Nothing.jsx","Page2.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","preventDefault","setState","defineProperty","target","value","passList","state","input","console","log","react_default","a","createElement","type","name","onChange","Component","ListPhotos","photos","filteredPhotos","clicked","handleClick","i","fetch","fetchPhotos","json","filter","photo","title","toLowerCase","includes","length","_this2","map","key","onClick","bind","src","url","Nothing","className","id","href","Page2","WrapUp","handleList","data","Fragment","SearchBar_SearchBar","ListPhotos_ListPhotos","App","react_router_dom","react_router","exact","path","component","to","status","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bead81cd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: '',\r\n        }\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ [e.target.value]: e.target.value })\r\n        this.props.passList(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log('this.props', this.props)\r\n        return (\r\n            <div>\r\n                <input type=\"text\" name=\"input\" onChange={this.handleInput} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ListPhotos.css'\r\nexport default class ListPhotos extends Component {\r\n\r\n    state = {\r\n        photos: [],\r\n        filteredPhotos: [],\r\n        clicked: null,\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const fetchPhotos = await fetch(\"http://jsonplaceholder.typicode.com/photos/\");\r\n        const photos = await fetchPhotos.json();\r\n        this.setState({ photos })\r\n        this.setState({ filteredPhotos: photos })\r\n        console.log('photos', photos)\r\n    }\r\n\r\n    async componentWillReceiveProps() {\r\n        const { photos } = this.state;\r\n        const { input } = this.props;\r\n        // console.log('input', input)\r\n\r\n        const filteredPhotos =\r\n            photos.filter(photo => {\r\n                return photo.title.toLowerCase().includes(input.toLowerCase())\r\n            })\r\n\r\n        console.log('filteredPhotos.length', filteredPhotos.length)\r\n        this.setState({ filteredPhotos })\r\n    }\r\n\r\n    handleClick = (i) => {\r\n        console.log('i', i);\r\n        if (i == this.state.clicked) {\r\n            this.setState({ clicked: null })\r\n        } else {\r\n            this.setState({ clicked: i })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { input } = this.props;\r\n        console.log(this.props.input);\r\n\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {this.state.filteredPhotos.map((photo, i) => <li key={i} onClick={this.handleClick.bind(this, i)}> <p>{photo.title} </p> {this.state.clicked === i && <img src={photo.url}></img>} </li>)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport './Nothing.css'\r\nexport default class Nothing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"c404\">\r\n                <div id=\"clouds\">\r\n                    <div className=\"cloud x1\" />\r\n                    <div className=\"cloud x1_5\" />\r\n                    <div className=\"cloud x2\" />\r\n                    <div className=\"cloud x3\" />\r\n                    <div className=\"cloud x4\" />\r\n                    <div className=\"cloud x5\" />\r\n                </div>\r\n                <div className=\"c\">\r\n                    <div className=\"_404\">404</div>\r\n                    <hr />\r\n                    <div className=\"_1\">THE PAGE</div>\r\n                    <div className=\"_2\">WAS NOT FOUND</div>\r\n                    <a className=\"btn\" href=\"../\">BACK TO MARS</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Page2() {\r\n    return (\r\n        <div>\r\n            This is the 2nd page\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SearchBar from './SearchBar'\r\nimport ListPhotos from './ListPhotos'\r\nimport { HashRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\r\nimport Nothing from './Nothing.jsx'\r\nimport Page2 from './Page2'\r\n\r\n//const MyContext = React.createContext();\r\n\r\n/**************************************************/\r\nclass WrapUp extends Component {\r\n  state = {\r\n    input: '',\r\n  }\r\n\r\n  handleList = (data) => {\r\n    this.setState({\r\n      input: data\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <SearchBar passList={this.handleList} />\r\n        <ListPhotos input={this.state.input} />\r\n      </React.Fragment >\r\n    )\r\n  }\r\n}\r\n\r\n/**************************************************/\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router >\r\n        <React.Fragment>\r\n          <Switch >\r\n            <Route exact path=\"/\" component={WrapUp} />\r\n            <Route exact path=\"/page2\" component={Page2} />\r\n            <Route exact path=\"/pagina2\">\r\n              <Redirect to=\"/page2\" />\r\n            </Route>\r\n            <Route component={Nothing} status={404} />\r\n          </Switch>\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}